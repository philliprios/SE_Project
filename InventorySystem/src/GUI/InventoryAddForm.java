/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Database.DatabaseConnection;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Name of the User
 */
public class InventoryAddForm extends javax.swing.JFrame {

    /**
     * Creates new form InventoryAddForm
     */
    
    Connection con;
    DatabaseConnection DBCon;
    PreparedStatement pst;
    ResultSet rs;
    
    public InventoryAddForm() {
        initComponents();
        DBCon = new DatabaseConnection();
        con = DBCon.getConnection();
        super.setLocationRelativeTo(null);
        
        /*String[] items = {"Ice", "Mango", "Pineapple"};
        Integer[] quantity = {1, 2, 3, 4, 5};
        Integer[] id = {1, 2, 3, 4, 5};
        
        JComboBox item = new JComboBox(items);
        JComboBox<Integer> idno = new JComboBox<>(id);
        JComboBox<Integer> qty= new JComboBox<>(quantity);
        
        InventoryTable.getColumnModel().getColumn(0).setCellEditor(new DefaultCellEditor(idno));
        InventoryTable.getColumnModel().getColumn(1).setCellEditor(new DefaultCellEditor(item));
        InventoryTable.getColumnModel().getColumn(2).setCellEditor(new DefaultCellEditor(qty));
        */
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    private void SaveTable() {
        try {
            int rows = InventoryTable.getRowCount();
            
            for (int row=0;row<rows;row++) {
                int id =  (int) InventoryTable.getValueAt(row, 0);
                String ItemName = (String) InventoryTable.getValueAt(row, 1);
                double price = (double) InventoryTable.getValueAt(row, 3);
                int quantity = (int) InventoryTable.getValueAt(row, 2);
                double amount = (double) InventoryTable.getValueAt(row, 4);
                
                String query = "Insert into inventory (item_no, name, quantity, price, amount) values ('" + id + "', '" + ItemName + "', '" + quantity + "', '" + price + "', '" + amount + "')";
                
                pst = con.prepareStatement(query);
                pst.execute();
            }
            JOptionPane.showMessageDialog(null, "Sucessfully saved");
        } catch (Exception e) {
            System.out.println(e);
        }
    }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        InventoryTable = new javax.swing.JTable();
        Add = new javax.swing.JButton();
        Save = new javax.swing.JButton();
        Close = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        InventoryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ItemID", "ItemName", "Quantity", "Price", "Amount"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                true, true, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        InventoryTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                InventoryTableKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(InventoryTable);

        Add.setText("Add Row(s)");
        Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddActionPerformed(evt);
            }
        });

        Save.setText("Save Items");
        Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveActionPerformed(evt);
            }
        });

        Close.setText("Close");
        Close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CloseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Close)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Add)
                        .addGap(18, 18, 18)
                        .addComponent(Save))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Save)
                    .addComponent(Add)
                    .addComponent(Close))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddActionPerformed
        DefaultTableModel model = (DefaultTableModel)InventoryTable.getModel();
        model.addRow(new Object[]{});
    }//GEN-LAST:event_AddActionPerformed

    private void SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveActionPerformed
        SaveTable();
        this.setVisible(false);
    }//GEN-LAST:event_SaveActionPerformed

    private void InventoryTableKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_InventoryTableKeyReleased
        int rows = InventoryTable.getRowCount();
        for (int row=0;row<rows;row++) {
            double price = (double) InventoryTable.getValueAt(row, 3);
            int quantity = (int) InventoryTable.getValueAt(row, 2);
            double result = price * quantity;
            
            DefaultTableModel model = (DefaultTableModel)InventoryTable.getModel();
            model.setValueAt(result, row, 4);
        }
    }//GEN-LAST:event_InventoryTableKeyReleased

    private void CloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CloseActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_CloseActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InventoryAddForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InventoryAddForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InventoryAddForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InventoryAddForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InventoryAddForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Add;
    private javax.swing.JButton Close;
    private javax.swing.JTable InventoryTable;
    private javax.swing.JButton Save;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
